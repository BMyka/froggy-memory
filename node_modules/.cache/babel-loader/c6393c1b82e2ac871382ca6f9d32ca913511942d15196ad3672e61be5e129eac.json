{"ast":null,"code":"export const capitalizeFirstLetter = string => {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n};\nexport const shuffleArray = array => {\n  return [...array].sort(() => Math.random() - 0.5);\n};\nexport const getImageNames = () => {\n  const context = require.context(\"./assets\", false, /\\.(jpe?g|png|gif)$/);\n  const imageNames = context.keys().map(fileName => fileName.replace(\"./\", \"\"));\n  return imageNames;\n};\nexport const formatImageName = imageName => {\n  // Remove file extension\n  const nameWithoutExtension = imageName.replace(/\\.[^/.]+$/, \"\");\n\n  // Replace dashes with spaces and capitalize first letter of each word\n  const formattedName = nameWithoutExtension.split(\"-\").map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(\" \");\n  return formattedName;\n};","map":{"version":3,"names":["capitalizeFirstLetter","string","charAt","toUpperCase","slice","shuffleArray","array","sort","Math","random","getImageNames","context","require","imageNames","keys","map","fileName","replace","formatImageName","imageName","nameWithoutExtension","formattedName","split","word","join"],"sources":["/home/myka/repos/froggy-memory/src/utils.js"],"sourcesContent":["export const capitalizeFirstLetter = (string) => {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n};\n\nexport const shuffleArray = (array) => {\n  return [...array].sort(() => Math.random() - 0.5);\n};\n\nexport const getImageNames = () => {\n  const context = require.context(\"./assets\", false, /\\.(jpe?g|png|gif)$/);\n  const imageNames = context\n    .keys()\n    .map((fileName) => fileName.replace(\"./\", \"\"));\n  return imageNames;\n};\n\nexport const formatImageName = (imageName) => {\n  // Remove file extension\n  const nameWithoutExtension = imageName.replace(/\\.[^/.]+$/, \"\");\n\n  // Replace dashes with spaces and capitalize first letter of each word\n  const formattedName = nameWithoutExtension\n    .split(\"-\")\n    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(\" \");\n\n  return formattedName;\n};\n"],"mappings":"AAAA,OAAO,MAAMA,qBAAqB,GAAIC,MAAM,IAAK;EAC/C,OAAOA,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE,GAAGF,MAAM,CAACG,KAAK,CAAC,CAAC,CAAC;AACzD,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIC,KAAK,IAAK;EACrC,OAAO,CAAC,GAAGA,KAAK,CAAC,CAACC,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,EAAE,GAAG,GAAG,CAAC;AACnD,CAAC;AAED,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EACjC,MAAMC,OAAO,GAAGC,OAAO,CAACD,OAAO,CAAC,UAAU,EAAE,KAAK,EAAE,oBAAoB,CAAC;EACxE,MAAME,UAAU,GAAGF,OAAO,CACvBG,IAAI,EAAE,CACNC,GAAG,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;EAChD,OAAOJ,UAAU;AACnB,CAAC;AAED,OAAO,MAAMK,eAAe,GAAIC,SAAS,IAAK;EAC5C;EACA,MAAMC,oBAAoB,GAAGD,SAAS,CAACF,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC;;EAE/D;EACA,MAAMI,aAAa,GAAGD,oBAAoB,CACvCE,KAAK,CAAC,GAAG,CAAC,CACVP,GAAG,CAAEQ,IAAI,IAAKA,IAAI,CAACrB,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE,GAAGoB,IAAI,CAACnB,KAAK,CAAC,CAAC,CAAC,CAAC,CAC3DoB,IAAI,CAAC,GAAG,CAAC;EAEZ,OAAOH,aAAa;AACtB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}